generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accounts {
  account_id           BigInt  @id @unique(map: "account_id_UNIQUE") @default(autoincrement())
  name                 String  @db.VarChar(255)
  type                 String  @db.VarChar(45)
  description          String? @db.LongText
  exclude_from_budgets Boolean
  status               String  @db.VarChar(45)
  users_user_id        BigInt
  current_balance      BigInt? @default(0)
  created_timestamp    BigInt?
  updated_timestamp    BigInt?
  color_gradient       String? @db.VarChar(45)

  @@unique([name, users_user_id], map: "name_UNIQUE")
  @@index([users_user_id], map: "fk_accounts_users1_idx")
}

model balances {
  balance_id          BigInt @id @default(autoincrement())
  date_timestamp      BigInt
  amount              Float
  accounts_account_id BigInt

  @@index([accounts_account_id], map: "fk_balances_accounts1_idx")
}

model balances_snapshot {
  accounts_account_id BigInt
  month               Int
  year                Int
  balance             BigInt  @default(0)
  created_timestamp   BigInt
  updated_timestamp   BigInt?

  @@id([accounts_account_id, month, year])
  @@index([accounts_account_id], map: "fk_balances_snapshot_accounts1_idx")
}

model budgets {
  budget_id       BigInt  @unique(map: "budget_id_UNIQUE") @default(autoincrement())
  month           Int
  year            Int
  observations    String? @db.LongText
  is_open         Boolean
  initial_balance BigInt?
  users_user_id   BigInt

  @@id([budget_id, users_user_id])
  @@unique([month, year, users_user_id], map: "uq_month_year_user")
  @@index([users_user_id], map: "fk_budgets_users1_idx")
}

model budgets_has_categories {
  budgets_budget_id      BigInt
  budgets_users_user_id  BigInt
  categories_category_id BigInt
  planned_amount_credit  BigInt @default(0)
  current_amount         BigInt @default(0)
  planned_amount_debit   BigInt @default(0)

  @@id([budgets_budget_id, budgets_users_user_id, categories_category_id])
  @@index([budgets_budget_id, budgets_users_user_id], map: "fk_budgets_has_categories_budgets1_idx")
  @@index([categories_category_id], map: "fk_budgets_has_categories_categories1_idx")
}

model categories {
  category_id          BigInt         @id @default(autoincrement())
  name                 String         @db.VarChar(255)
  type                 String         @db.Char(1)
  users_user_id        BigInt
  description          String?        @db.LongText
  color_gradient       String?        @db.VarChar(45)
  status               String         @default("Ativa") @db.VarChar(45)
  exclude_from_budgets Int            @default(0) @db.TinyInt
  transactions         transactions[]

  @@unique([users_user_id, type, name], map: "uq_name_type_user_id")
  @@index([users_user_id], map: "fk_category_users_idx")
}

model entities {
  entity_id     BigInt         @id @unique(map: "entity_id_UNIQUE") @default(autoincrement())
  name          String         @db.VarChar(255)
  users_user_id BigInt
  transactions  transactions[]

  @@unique([name, users_user_id], map: "name_UNIQUE")
  @@index([users_user_id], map: "fk_entities_users1_idx")
  @@index([name], map: "name")
}

model invest_asset_evo_snapshot {
  month                  Int
  year                   Int
  units                  Decimal @db.Decimal(16, 6)
  invested_amount        BigInt
  current_value          BigInt
  invest_assets_asset_id BigInt
  created_at             BigInt
  updated_at             BigInt
  withdrawn_amount       BigInt

  @@id([month, year, invest_assets_asset_id])
  @@unique([month, year, invest_assets_asset_id], map: "uq_month_year_invest_assets_asset_id")
  @@index([invest_assets_asset_id], map: "fk_invest_asset_evo_snapshot_invest_assets1_idx")
}

model invest_assets {
  asset_id      BigInt  @id @unique(map: "asset_id_UNIQUE") @default(autoincrement())
  name          String  @db.VarChar(75)
  ticker        String? @db.VarChar(45)
  units         Decimal @db.Decimal(16, 6)
  type          String  @db.VarChar(75)
  broker        String? @db.VarChar(45)
  created_at    BigInt
  updated_at    BigInt?
  users_user_id BigInt

  @@unique([name, type, users_user_id], map: "users_user_id_type_name_unique")
  @@index([users_user_id], map: "fk_invest_assets_users1_idx")
}

model invest_desired_allocations {
  desired_allocations_id BigInt @unique(map: "desired_allocations_id_UNIQUE") @default(autoincrement())
  type                   String @unique(map: "type_UNIQUE") @db.VarChar(75)
  alloc_percentage       Float? @db.Float
  users_user_id          BigInt

  @@id([desired_allocations_id, type])
  @@index([users_user_id], map: "fk_invest_desired_allocations_users1_idx")
}

model invest_transactions {
  transaction_id         BigInt                   @id @unique(map: "transaction_id_UNIQUE") @default(autoincrement())
  date_timestamp         BigInt
  type                   invest_transactions_type
  note                   String?                  @db.VarChar(100)
  total_price            BigInt
  units                  Decimal                  @db.Decimal(16, 6)
  fees_taxes             BigInt?                  @default(0)
  invest_assets_asset_id BigInt
  created_at             BigInt
  updated_at             BigInt

  @@index([invest_assets_asset_id], map: "fk_invest_transactions_invest_assets1_idx")
}

model rules {
  rule_id                          BigInt  @default(autoincrement())
  matcher_description_operator     String? @db.VarChar(45)
  matcher_description_value        String? @db.VarChar(45)
  matcher_amount_operator          String? @db.VarChar(45)
  matcher_amount_value             BigInt?
  matcher_type_operator            String? @db.VarChar(45)
  matcher_type_value               String? @db.VarChar(45)
  matcher_account_to_id_operator   String? @db.VarChar(45)
  matcher_account_to_id_value      BigInt?
  matcher_account_from_id_operator String? @db.VarChar(45)
  matcher_account_from_id_value    BigInt?
  assign_category_id               BigInt?
  assign_entity_id                 BigInt?
  assign_account_to_id             BigInt?
  assign_account_from_id           BigInt?
  assign_type                      String? @db.VarChar(45)
  users_user_id                    BigInt
  assign_is_essential              Boolean @default(false)

  @@id([rule_id, users_user_id])
  @@index([users_user_id], map: "fk_rules_users1_idx")
}

model transactions {
  transaction_id           BigInt      @id @unique(map: "transaction_id_UNIQUE") @default(autoincrement())
  date_timestamp           BigInt
  amount                   BigInt
  type                     String      @db.Char(1)
  description              String?     @db.LongText
  entities_entity_id       BigInt?
  accounts_account_from_id BigInt?
  accounts_account_to_id   BigInt?
  categories_category_id   BigInt?
  is_essential             Boolean     @default(false)
  entities                 entities?   @relation(fields: [entities_entity_id], references: [entity_id], onUpdate: NoAction, map: "transactions_ibfk_1")
  categories               categories? @relation(fields: [categories_category_id], references: [category_id], onUpdate: NoAction, map: "transactions_ibfk_2")

  @@index([accounts_account_from_id], map: "fk_transactions_accounts1_idx")
  @@index([categories_category_id], map: "fk_transactions_categories1_idx")
  @@index([entities_entity_id], map: "fk_transactions_entities2_idx")
}

model users {
  user_id               BigInt  @id @default(autoincrement())
  username              String  @unique(map: "username_UNIQUE") @db.VarChar(45)
  password              String  @db.MediumText
  email                 String  @unique(map: "email_UNIQUE") @db.VarChar(45)
  sessionkey            String? @db.MediumText
  sessionkey_mobile     String? @db.MediumText
  trustlimit            Int?
  trustlimit_mobile     Int?
  last_update_timestamp BigInt  @default(0)
}

enum invest_transactions_type {
  B
  S
}
